<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <% if (note.hasLabel("shareDescription")) { %>
            <meta name="description" content="<%= note.getLabelValue('shareDescription') %>">
        <% } %>
    
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <% if (note.hasRelation("shareFavicon")) { %>
        <link rel="shortcut icon" href="api/notes/<%= note.getRelation('shareFavicon').value %>/download">
        <% } else { %>
        <link rel="shortcut icon" href="../favicon.ico">
        <% } %>
        <script src="../<%= appPath %>/share.js"></script>
        <% if (!note.isLabelTruthy("shareOmitDefaultCss")) { %>
            <link href="../<%= assetPath %>/node_modules/normalize.css/normalize.css" rel="stylesheet">
            <link href="../<%= assetPath %>/stylesheets/share.css" rel="stylesheet">
        <% } %>
        <% if (note.type === 'text' || note.type === 'book') { %>
            <link href="../<%= assetPath %>/libraries/ckeditor/ckeditor-content.css" rel="stylesheet">
        <% } %>
        <% for (const cssRelation of note.getRelations("shareCss")) { %>
            <link href="api/notes/<%= cssRelation.value %>/download" rel="stylesheet">
        <% } %>
        <% for (const jsRelation of note.getRelations("shareJs")) { %>
            <script type="module" src="api/notes/<%= jsRelation.value %>/download"></script>
        <% } %>
        <% if (note.isLabelTruthy('shareDisallowRobotIndexing')) { %>
            <meta name="robots" content="noindex,follow" />
        <% } %>
        <%- header %>
        <title><%= note.title %></title>
    </head>
<%
const logoWidth = subRoot.note.getLabelValue("shareLogoWidth");
const logoHeight = subRoot.note.getLabelValue("shareLogoHeight");
const mobileLogoHeight = logoHeight && logoWidth ? 32 / (logoWidth / logoHeight) : "";
const currentTheme = note.getLabel("shareTheme") === "light" ? "light" : "dark";
const themeClass = currentTheme === "light" ? " theme-light" : " theme-dark";
const headingRe = /(<h[1-6]>)(.+?)(<\/h[1-6]>)/g;
const headingMatches = [...content.matchAll(headingRe)];
const slugify = (text) => text.toLowerCase().replace(/[^\w]/g, "-");
content = content.replaceAll(headingRe, (...match) => {
    match[0] = match[0].replace(match[3], `<a id="${slugify(match[2])}" class="toc-anchor" name="${slugify(match[2])}" href="#${slugify(match[2])}">#</a>${match[3]}`);
    return match[0];
});
%>
<body data-note-id="<%= note.noteId %>" class="type-<%= note.type %><%= themeClass %>" data-ancestor-note-id="<%= subRoot.note.noteId %>">
    <script>
    const preference = localStorage.getItem("theme");
    if (preference) {
        if (preference === "dark") {
            document.body.classList.add("theme-dark");
            document.body.classList.remove("theme-light");
        }
        else {
            document.body.classList.remove("theme-dark");
            document.body.classList.add("theme-light");
        }
    }
    </script>
<div id="mobile-header">
    <a href="/">
        <% if (subRoot.note.hasRelation("shareLogo")) { %>
            <img src="api/images/<%= subRoot.note.getRelation("shareLogo").value %>/image.png" width="32" height="<%= mobileLogoHeight %>" alt="Logo" />
        <% } %>
        <%= subRoot.note.title %>
    </a>
    <button aria-label="Show Mobile Menu" id="show-menu-button"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z"></path></svg></button>
</div>
<div id="split-pane">
    <div id="left-pane">
        <div id="navigation">
            <div id="site-header">
                <a href="/">
                    <% if (subRoot.note.hasRelation("shareLogo")) { %>
                        <img src="api/images/<%= subRoot.note.getRelation("shareLogo").value %>/image.png" width="<%= logoWidth %>" height="<%= logoHeight %>" alt="Logo" />
                    <% } %>
                    <%= subRoot.note.title %>
                </a>
                <div class="theme-selection">
                    <span id="sitetheme">Site Theme</span>
                    <label class="switch">
                      <input type="checkbox" checked="<%= currentTheme === "dark" %>" aria-labelledby="sitetheme">
                      <span class="slider"></span>
                      <svg class="dark-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M20.742 13.045a8.088 8.088 0 0 1-2.077.271c-2.135 0-4.14-.83-5.646-2.336a8.025 8.025 0 0 1-2.064-7.723A1 1 0 0 0 9.73 2.034a10.014 10.014 0 0 0-4.489 2.582c-3.898 3.898-3.898 10.243 0 14.143a9.937 9.937 0 0 0 7.072 2.93 9.93 9.93 0 0 0 7.07-2.929 10.007 10.007 0 0 0 2.583-4.491 1.001 1.001 0 0 0-1.224-1.224zm-2.772 4.301a7.947 7.947 0 0 1-5.656 2.343 7.953 7.953 0 0 1-5.658-2.344c-3.118-3.119-3.118-8.195 0-11.314a7.923 7.923 0 0 1 2.06-1.483 10.027 10.027 0 0 0 2.89 7.848 9.972 9.972 0 0 0 7.848 2.891 8.036 8.036 0 0 1-1.484 2.059z"></path></svg>
                      <svg class="light-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2h-3zm17 0h3v2h-3zM4.219 18.363l2.12-2.122 1.415 1.414-2.12 2.122zM16.24 6.344l2.122-2.122 1.414 1.414-2.122 2.122zM6.342 7.759 4.22 5.637l1.415-1.414 2.12 2.122zm13.434 10.605-1.414 1.414-2.122-2.122 1.414-1.414z"></path></svg>
                    </label>
                </div>
                <div class="search-item">
                    <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M10 18a7.952 7.952 0 0 0 4.897-1.688l4.396 4.396 1.414-1.414-4.396-4.396A7.952 7.952 0 0 0 18 10c0-4.411-3.589-8-8-8s-8 3.589-8 8 3.589 8 8 8zm0-14c3.309 0 6 2.691 6 6s-2.691 6-6 6-6-2.691-6-6 2.691-6 6-6z"></path></svg>
                    <input type="text" class="search-input" placeholder="Search...">
                </div>
            </div>
        <% if (subRoot.note.hasVisibleChildren()) { %>
            <nav id="menu">
                <%
                const ancestors = [];
                let notePointer = note;
                while (notePointer.parents[0].noteId !== "_share") {
                    const pointerParent = notePointer.parents[0];
                    ancestors.push(pointerParent.noteId);
                    notePointer = pointerParent;
                }
                %>
                <%- include("tree_item", {note: subRoot.note, activeNote: note, subRoot: subRoot, ancestors: ancestors}) %>
            </nav>
        <% } %>   
        </div>
    </div>
    <div id="right-pane">
        <div id="main">

            <div id="content" class="type-<%= note.type %><% if (note.type === "text") { %> ck-content<% } %><% if (isEmpty) { %> no-content<% } %>">
                    <h1 id="title"><%= note.title %></h1>
                <% if (isEmpty && (!note.hasVisibleChildren() && note.type !== "book")) { %>
                    <p>This note has no content.</p>
                <% } else { %>
                    <%
                    content = content.replace(/<img /g, `<img alt="Article Image" loading="lazy" `);
                    %>
                    <%- content %>
                <% } %>
            </div>

            <% if (note.hasVisibleChildren() || note.type === "book") { %>
                <nav id="childLinks" class="<% if (isEmpty) { %>grid<% } else { %>list<% } %>">
                    <% if (!isEmpty) { %>
                        <span>Subpages:</span>
                    <% } %>

                    <ul>
                        <%
                        const action = note.type === "book" ? "getChildNotes" : "getVisibleChildNotes";
                        for (const childNote of note[action]()) {
                            const isExternalLink = childNote.hasLabel("shareExternal") || childNote.hasLabel("shareExternalLink");
                            const linkHref = isExternalLink ? childNote.getLabelValue("shareExternal") ?? childNote.getLabelValue("shareExternalLink") : `./${childNote.shareId}`;
                            const target = isExternalLink ? ` target="_blank" rel="noopener noreferrer"` : "";
                        %>
                            <li>
                                <a class="type-<%= childNote.type %>" href="<%= linkHref %>"<%= target %>><%= childNote.title %></a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            <% } %>
        </div>
        <%
        if (headingMatches.length > 1) {
            const level = (m) => parseInt(m[1].replace(/[<h>]+/g, ""));

            const toc = [
                {
                    level: level(headingMatches[0]),
                    name: headingMatches[0][2],
                    children: []
                }
            ];
            const last = (arr = toc) => arr[arr.length - 1];
            const makeEntry = (m) => ({level: level(m), name: m[2], children: []});
            const getLevelArr = (lvl, arr = toc) => {
                if (arr[0].level === lvl) return arr;
                const top = last(arr);
                return top.children.length ? getLevelArr(lvl, top.children) : top.children;
            };
            
            
            for (let m = 1; m < headingMatches.length; m++) {
                const target = getLevelArr(level(headingMatches[m]));
                target.push(makeEntry(headingMatches[m]));
            }
        %>
            <div id="toc-pane">
                <h3>On This Page</h3>
                <ul id="toc">
                    <% for (const entry of toc) { %>
                        <%- include("toc_item", {entry}) %>
                    <% } %>
                </ul>
            </div>
        <% } %>
    </div>
</div>
</body>
</html>
